,Nombre,Nivel por defecto,Razón
1,Simple List,,
2,Nested List,,
3,Dictionary List,,
4,Simple List Comprehension,,
5,Nested List Comprehension,,
6,List Comprehension with If statements,,
7,Simple Dictionary,,
8,Nested Dictionary,,
9,List Dictionary,,
10,Dictionary of dictionary lists,,
11,Simple Dictionary Comprehension,,
12,Dictionary Comprehension with If statements,,
13,Dictionary Comprehension with if expression (If-Else),,
14,Nested Dictionary Comprehension,,
15,Simple Tuple,,
16,Nested Tuple,,
17,Files -->  'open' call function,,
18,Files →  ‘write’ call function,,
19,Files → ‘writelines’ call function,,
20,Files → ‘read’ call function,,
21,Files → ‘readlines’ call function,,
22,Print,,
23,Simple Assignment,,
24,Assigment with sum (total = total + 1),,
25,Simplified incremental Assignment (+=),,
26,Simple If statements,,
27,If statements expression (else),,
28,If statements using → __name__ == ‘__main__’,,
29,'break' statement,,
30,‘continue’ statement,,
31,‘pass’ statement,,
32,Simple While Loop,,
33,While with Else Loo,,
34,Simple For Loop,,
35,Nested For Loop,,
36,For Loop with Tuple as name,,
37,For Loop with List to iterate,,
38,For Loop with Tuple to iterate,,
39,'range' call function,,
40,'zip' call function,,
41,‘map’ call function,,
42,‘enumerate’ call function,,
43,Function with simple argument(s),,
44,Function with Default argument,,
45,Function with * argument,,
46,Function with ** argument,,
47,Function with Keyword-Only argument,,
48,Recursive Functions,,
49,Return,,
50,Lambda,,
51,Generator Functions (yield),,
52,Generator Expressions,,
53,Import,,
54,From,,
55,Relative From,,
56,From with * statements,,
57,'as' extension,,
58,Using the struct module,,
59,Using the pickle module,,
60,Using the shelve module,,
61,Using the dbm module,,
62,Using the re module,,
63,Using the importlib module,,
64,Simple Class,,
65,Inherited Class,,
66,Using the constructor method --> __init__,,
67,Descriptors,,
68,Class Properties,,
69,Private Methods or Attributes of the class,,
70,Class Method,,
71,Static Method,,
72,Decorator Function,,
73,Decorator Class,,
74,Metaclass (3.X) created with --> __new__,,
75,Metaclass created in the class header --> 'metaclass = ',,
76,Metaclass (2.X) created as attribute with --> __metaclass__,,
77,Super function,,
78,Attribute  statements __slots__,,
79,Simple Attribute,,
80,Special Class Attribute __class__,,
81,Special Class Attribute __dict__,,
82,'try/except' exception,,
83,'try/else/except' exception,,
84,'try/try' exception,,
85,'try/finally' exception,,
86,'try/except/finally' exception,,
87,'try/except/else/finally' exception,,
88,‘raise’ exception,,
89,‘assert’ exception,,
90,With,,
